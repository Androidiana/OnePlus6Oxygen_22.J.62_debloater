name: MasterDeployCI
on:
  push:
    branches:
    - main
    
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Create Release Folder
      run: rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' . ./release
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: zip -r OnePlus6Oxygen_22.J.62_debloat.zip ./release -x ".git/*" ".github/*"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./OnePlus6Oxygen_22.J.62_debloat.zip
        asset_name: OnePlus6Oxygen_22.J.62_debloat.zip
        asset_content_type: application/zip
